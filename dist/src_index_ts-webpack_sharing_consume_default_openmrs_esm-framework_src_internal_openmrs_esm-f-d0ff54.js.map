{"version":3,"file":"src_index_ts-webpack_sharing_consume_default_openmrs_esm-framework_src_internal_openmrs_esm-f-d0ff54.js","mappings":";;;;;;;;;;;;;;;;;;;AAAuC;AACmB;AACI;AAQ9D,SAASK,mBAAmB,KAAqE;QAArE,4BAAEC;IAC5B,IAAQC,OAAgBD,oBAAhBC,MAAMC,QAAUF,oBAAVE;IACd,IAAMC,WAAWL,6DAAWA;IAC5B,IAAMM,cAAc,GAAkB,OAAfC,OAAOC,OAAO,EAAC;IAEtC,IAAMC,UAAUZ,8CAAOA,CAAC;QACtB,IAAMa,YAAYL,SAASM,QAAQ,CAACC,KAAK,CAAC;QAC1C,IAAMC,cAAcH,SAAS,CAACA,UAAUI,MAAM,GAAG,EAAE;QACnD,OAAOC,mBAAmBF;IAC5B,GAAG;QAACR,SAASM,QAAQ;KAAC;IAEtB,qBACE,2DAACb,oEAAgBA;QACfkB,IAAI,GAAkBb,OAAfG,aAAY,KAAQ,OAALH;QACtBc,WAAW,uBAAqE,OAA9CR,QAAQS,KAAK,CAACf,SAAS;OAExDC;AAGP;AAEO,IAAMe,0BAA0B,SAACjB;WAA6C;6BAEjF,2DAACH,2DAAaA,sBACZ,2DAACE;YAAmBC,qBAAqBA;;;EAE3C;;;;;;;;;;;;;;;;;;ACpC0C;AAEvC,IAAMmB,eAAe;IAC1BC,gBAAgB;QACdC,OAAOH,wDAAIA,CAACI,OAAO;QACnBC,UAAU;QACVC,cAAc;IAChB;AACF,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR+F;AAClD;AACwC;AACjB;AAEtE,IAAMK,aAAa;AAEnB,IAAMC,UAAU;IACdC,aAAa;IACbF,YAAAA;AACF;AAEO,IAAMG,oBAAoBC,iDAAoD,CAAQ;AAEtF,IAAME,OAAOV,yEAAiBA,CAAC;WAAM,4OAAO;GAAqBK,SAAS;AAE1E,IAAMM,0BAA0BT,wEAAgBA,CACrDV,oGAAuBA,CAAC;IACtBhB,MAAM;IACNoC,MAAM;IACNnC,OAAO;AACT,IACA4B,SACA;AAEK,IAAMQ,sBAAsBb,yEAAiBA,CAAC;WAAM,yLAAO;GAA2BK,SAAS;AAEtG,gBAAgB;AACT,IAAMS,+BAA+BZ,wEAAgBA,CAC1DC,oFAAmBA,CAAC;IAClBY,MAAM;IACNtC,OAAO;IACP2B,YAAAA;AACF,IACAC,SACA;AACK,IAAMW,2BAA2BhB,yEAAiBA,CACvD;WAAM,0gBAAO;GACbK,SACA;AAEK,SAASY;IACdhB,0EAAkBA,CAACG,YAAYV,wDAAYA;AAC7C;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA","sources":["webpack://@ugandaemr/esm-laboratory-app/./src/components/create-dashboard-link.component.tsx","webpack://@ugandaemr/esm-laboratory-app/./src/config-schema.ts","webpack://@ugandaemr/esm-laboratory-app/./src/index.ts","webpack://@ugandaemr/esm-laboratory-app/./translations/ lazy nonrecursive .json$"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { ConfigurableLink } from '@openmrs/esm-framework';\nimport { BrowserRouter, useLocation } from 'react-router-dom';\n\nexport interface DashboardLinkConfig {\n  name: string;\n  title: string;\n  slot?: string;\n}\n\nfunction DashboardExtension({ dashboardLinkConfig }: { dashboardLinkConfig: DashboardLinkConfig }) {\n  const { name, title } = dashboardLinkConfig;\n  const location = useLocation();\n  const spaBasePath = `${window.spaBase}/home`;\n\n  const navLink = useMemo(() => {\n    const pathArray = location.pathname.split('/home');\n    const lastElement = pathArray[pathArray.length - 1];\n    return decodeURIComponent(lastElement);\n  }, [location.pathname]);\n\n  return (\n    <ConfigurableLink\n      to={`${spaBasePath}/${name}`}\n      className={`cds--side-nav__link ${navLink.match(name) && 'active-left-nav-link'}`}\n    >\n      {title}\n    </ConfigurableLink>\n  );\n}\n\nexport const createHomeDashboardLink = (dashboardLinkConfig: DashboardLinkConfig) => () =>\n  (\n    <BrowserRouter>\n      <DashboardExtension dashboardLinkConfig={dashboardLinkConfig} />\n    </BrowserRouter>\n  );\n","import { Type } from '@openmrs/esm-framework';\n\nexport const configSchema = {\n  casualGreeting: {\n    _type: Type.Boolean,\n    _default: false,\n    _description: 'Whether to use a casual greeting (or a formal one).',\n  },\n};\n\nexport type Config = {\n  casualGreeting: boolean;\n  whoToGreet: Array<string>;\n};\n","import { getAsyncLifecycle, defineConfigSchema, getSyncLifecycle } from '@openmrs/esm-framework';\nimport { configSchema } from './config-schema';\nimport { createHomeDashboardLink } from './components/create-dashboard-link.component';\nimport { createDashboardLink } from '@openmrs/esm-patient-common-lib';\n\nconst moduleName = '@ugandaemr/esm-laboratory-app';\n\nconst options = {\n  featureName: 'ugandaemr-laboratory',\n  moduleName,\n};\n\nexport const importTranslation = require.context('../translations', false, /.json$/, 'lazy');\n\nexport const root = getAsyncLifecycle(() => import('./root.component'), options);\n\nexport const laboratoryDashboardLink = getSyncLifecycle(\n  createHomeDashboardLink({\n    name: 'laboratory',\n    slot: 'laboratory-dashboard-slot',\n    title: 'Laboratory',\n  }),\n  options,\n);\n\nexport const laboratoryComponent = getAsyncLifecycle(() => import('./laboratory.component'), options);\n\n// Patient chart\nexport const laboratoryOrderDashboardLink = getSyncLifecycle(\n  createDashboardLink({\n    path: 'laboratory-orders',\n    title: 'Laboratory',\n    moduleName,\n  }),\n  options,\n);\nexport const laboratoryOrderComponent = getAsyncLifecycle(\n  () => import('./patient-chart/laboratory-order.component'),\n  options,\n);\n\nexport function startupApp() {\n  defineConfigSchema(moduleName, configSchema);\n}\n","var map = {\n\t\"./en.json\": [\n\t\t\"./translations/en.json\",\n\t\t\"translations_en_json\"\n\t],\n\t\"./es.json\": [\n\t\t\"./translations/es.json\",\n\t\t\"translations_es_json\"\n\t],\n\t\"./fr.json\": [\n\t\t\"./translations/fr.json\",\n\t\t\"translations_fr_json\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./translations lazy .json$\";\nmodule.exports = webpackAsyncContext;"],"names":["React","useMemo","ConfigurableLink","BrowserRouter","useLocation","DashboardExtension","dashboardLinkConfig","name","title","location","spaBasePath","window","spaBase","navLink","pathArray","pathname","split","lastElement","length","decodeURIComponent","to","className","match","createHomeDashboardLink","Type","configSchema","casualGreeting","_type","Boolean","_default","_description","getAsyncLifecycle","defineConfigSchema","getSyncLifecycle","createDashboardLink","moduleName","options","featureName","importTranslation","require","context","root","laboratoryDashboardLink","slot","laboratoryComponent","laboratoryOrderDashboardLink","path","laboratoryOrderComponent","startupApp"],"sourceRoot":""}